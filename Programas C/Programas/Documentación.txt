En este archivo voy a ir anotando qué hacen las distintas versiones del
programa que vaya guardando. De esta manera tendré registros de las versiones
de los programas en la medida en que los voy modificando.
----------------------------------------------------------------------------------

30/12/2020

Armé la carpeta "Iteración ordenada". Esta versión contiene 2 structs, uno de 
Parámetros y uno de la Red. El programa puede armar las redes, inicializarlas,
aplicar el método RK4 y evolucionar el sistema. Luego guarda los datos de la
matriz de Adyacencia, la de Superposición y los valores de Opiniones a medida
que evoluciona. Me crea a la salida un archivo con el nombre
"Datos_Evolucion_Opinion_N=$_T=$_K=$".

Lo que tiene este programa y el motivo por el cuál lo voy a archivar es que
la iteración se realiza de manera ordenada, evolucionando a TODOS los agentes
al mismo tiempo. De alguna manera es como si tomara una fotografía del sistema,
se fijara cómo deben evolucionar todos los agentes dada esta foto y luego de
calcular cuál sería el avance para todos, recién ahí hiciera la evolución.

Pablo me propuso que este avance tan ordenado podría estar afectando a la forma
de evolucionar del sistema y que por tanto debería probar primero con realizar
una recorrida ordenada de los agentes, pero permitiendo que estos se conecten con
1 agente de manera aleatoria. Después en el futuro quizás le permita además que
la selección de quién va a evolucionar sea también aleatoria.

Dado esto, se me presenta la oportunidad de modificar el RK4 usado, de manera
de que el RK4 sea mucho más general en su forma de iterar. Estoy pensando en
que quizás eso me lleve a construir nuevas funciones que encierren al RK4 mientras
hago iterar al sistema. Habrá que ver eso. Pero lo importante es que entonces el
motivo de no guardar un sólo archivo sino toda la carpeta en "Iteración Ordenada"
es que las funciones guardadas en sus archivos general, inicializar y avanzar
no van a ser las mismas que las que voy a armar ahora.

---------------------------------------------------------------------------------

07/01/2021

Armé la carpeta "Interacción de a pares". Esta carpeta lo que contiene es el programa
modificado de manera de que cada iteración recorra a todos los agentes y realice las
interacciones con un segundo agente seleccionado de manera aleatoria. En esta
versión el sistema evoluciona de a una sóla variable a la vez. Ahora el RK4 toma
una sola variable y esa la evoluciona, y la variable se define por fuera del RK4.

Estoy guardando ahora el archivo porque el otro día intenté agregar elementos al
Struct de la Red y eso me descuajeringó todo. Ahora mismo logré hacer que el
programa vuelva a funcionar, por lo que por lo menos de movida, ahora
todo vuelve a estar en su lugar. Lo que voy a hacer ahroa es volver a intentar
agregar los elementos necesarios a los structs e intentar hacer funcionar el
programa de nuevo. Si todo funca, genial. Sino, habrá que ir revisando de nuevo
cómo hacerlo funcionar. Igual, pareciera que el problema giraba en torno a los
PRE incrementos colocados en los for. Al cambiar eso, pareciera que se ordenó todo.
También puede ser que hubiera problemas que están guardados en los archivos.o
que yo desconozco y si hubiera borrado y re armado esos archivos estos problemas
se hubieran solucionado antes, quién sabe.

Lo actualicé a la versión del 17/01/2021. Es decir, crea dos archivos de texto
simultáneos, toma valores de input, calcula la variación del sistema, tiene
dos matrices más que antes.

---------------------------------------------------------------------------------

21/01/2021

Hice la que creo es la última actualización a Interacción de a Pares. Ahora
voy a cambiar los archivos para que me creen los datos necesarios para armar
los gráficos de Baumann. Es por esto que voy a hacer que me guarde un archivo
de menos, le voy a cambiar los nombres, le voy a cambiar las variables y más.

Guardo un sólo archivo porque para los gráficos de Baumann no necesito
guardar los datos de la variación promedio del sistema.

Los nombres los voy a cambiar para que reflejen la variación en Delta y
Alfa correspondiente. Por ahora no le voy a poner el valor de N.
Es cierto que por ahora voy a empezar computando para 100 agentes, porque
creo que 100 va a ser mucho tiempo de cómputo. Pero considero
que esa info la puedo deducir sabiendo que la cantidad de tópicos es 2.

Con cambiar variables me refiero a que ahora los valores que se van a
definir por input de línea de comando son alfa y Delta, que además son
los dos floats.

---------------------------------------------------------------------------------

08/02/2021

Agregué la carpeta de Gráfico baumann. Lo que tengo ahí es un programa
que recibe dos inputs que son el valor de Alfa y el ángulo en grados
de Delta. La idea de este programa es que tenga los mismos parámetros
que el modelo que usa Baumann para así poder replicar los mismos gráficos
que Baumann realiza. Este programa lo que hace es correr el modelo hasta
que la Variación promedio sea menor a 10^(-6) y en un archivo registra
la matriz de Adyacencia, la de Superposición y las opiniones de todos los
agentes en cada paso temporal. Los archivos reciben de nombre:
"Datos_Opiniones_alfa=$_Cdelta=$".
Los parámetros de esta red actualmente son N=500, K= 3, T=2, Criterio
de corte= 10^(-6), Iteraciones Extra = 1000, Máximo de Opiniones
iniciales = 3, dt = 0.001.

---------------------------------------------------------------------------------

16/02/2021

Guardé en la carpeta de Gráfico Baumann la última versión que armé de
este programa. A partir de ahora voy a empezar a trabajar en armar un
código que implemente el uso de una red impulsada por actividad,
selección de vecinos por homofilia e interacción de grupos.
Por eso es que este código lo dejo acá separado para volver
en un futuro, y mientras voy a ir armando un nuevo código que en el
futuro voy a guardar en la carpeta Modelo Impulsado por Actividades.
Suponiendo que logre entender qué hace que los struct me funcionen
tan mal.

-------------------------------------------------------------------------------

28/02/2021

El código de la carpeta "Modelo Erdós-Renyi" arma redes estáticas
con grado medio 8, para distintos valores de agentes: N=10,100,1000.
Además los otros parámetros del sistema son: K=1, T=2, Crit Corte = 10^(-6)
Máxima opinión inicial = 3. El dt es 0.001 actualmente, pero estamos
pensando en cambiarlo. Además el código ahora sólo corre sobre redes
conexas a partir del uso de la función Tamaño_Comunidad.

Además el sistema ahora evoluciona la opinión de la red de manera
sincrónica, no como antes que los iba evolucionando a cada uno
a la vez. Para esto justamente modifiquñe la fuinción de RK4
para que devuelva a la salida el valor evolucionado del vector
y que el vector que le pasás no se modifique.

-------------------------------------------------------------------------------

07/03/2021

El código de la carpeta "Cambios dt" trabaja también con redes armadas
con el modelo de Erdós-Renyi con un grado medio de 8. El resto de los
parámetros también son iguales. El tema es que este código lo que hace
es recibir valores de N y Alfa, y en el interior del código tiene
agendado varios valores de dt. La idea es que crea inicialmente una
red y un set de valores de opiniones iniciales. A ese sistema inicial
lo evoluciona varias veces cambiando únicamente el valor de dt, de
manera de ver cómo cambia la evolución del sistema al cambiar ese 
parámetro.

Por tanto, el código funciona de manera de que guarda los valores
iniciales de Opinión y que luego a partir de estos vuelve a reiterar
el sistema. La red está guardada en la matriz de Adyacencia, y como
la red es estática, una vez creada no hay que hacerle nada.

------------------------------------------------------------------------------

07/05/2021

El código en la carpeta "ER2" es la versión oficial de Erdós-Renyi.
Fue usado para trabajar con redes de 100 y 1000 agentes, 2 tópicos,
Influencia social igual a 1, dt de 0,1, Grado medio de la red 8,
Criterio de Corte en la mayoría de los casos igual a 10^(-6) y
Máximo de opiniones iniciales igual a 3. Este código se encargó
de armar los datos para redes variando los valores de Alfa entre
0 y 1 y cos(delta) también entre 0 y 1. El cos(delta) varió
de a 0,1, mientras que el alfa entre 0,2 y 1 varió de a 0,1
y entre 0 y 0,2 varió de a 0,01. Eso es porque en esa región
se encontraba la región de transición del sistema que hacía
que el sistema pase del consenso a la polarización.

Para resumir lo que hacía el código, recibía como Input el número
de agentes N, el valor de Alfa y cos(delta), aunque no recibía los
valores exactos sino que recibía números grandes que después en el
archivo C corregía. También recibía el número de iteración, que indicaba
el número de elemento del ensamble que correspondía a esa simulación.
Luego con todos los datos recibidos, armaba aleatoriamente las matrices
de Adyacencia y de Opiniones, definía la de Superposición usando el valor
de cos(delta) correspondiente. También armaba dos vectores para utilizar más
tarde, que eran el de opiniones previas y el de Diferencia de opiniones.
Definía un puntero a la función que me aplicaba la ecuación diferencial,
comprobaba que la matriz de Adyacencia fuera conexa, luego abría mi archivo,
escribía los datos iniciales importantes y desde ahí empezaba a evolucionar
el sistema usando un correspondiente método de RK4. Cuando veía que el sistema
variaba las opiniones de los sujetos en promedio una cantidad menor a 
10^(-6), entonces cortaba, cerraba todo y listo.

-----------------------------------------------------------------------------------

07/06/2021

En la carpeta Redes Estáticas está el código que usé para armar los datos
que tomaban las matrices de Adyacencia a partir de archivos externos.
Estos archivos externos habían sido armados usando el networkx de Python.
Los tipos de redes creados eran: Erdos-Renyi, Random Regulars y Barabasi.
En total eran 20 redes distintas para cada tipo, las cuales se encuentran
en la carpeta MARE (Matrices Adyacencia Redes Estáticas). El programa
realiza las cuentas iterando el sistema tal cual el anterior y guarda
la semilla inicial, las Variaciones Promedio calculadas en cada paso y
el estado final de las opiniones del sistema.

Lo usé para trabajar redes con N=1000, grado medio que variaba entre
4,8,12 y 16, dt=0,01, Criterio de Corte igual a 10^(-4), Influencia Social
igual a 1 y Máximo de opiniones iniciales igual a 3. El Alfa varió
entre 0 y 4 de a 0,1, mientras que el coseno(delta) varió entre -0,5 y 1
de a 0,1. Todo esto lo hice con 100 iteraciones para cada punto del ensamble
calculándolo en las computadoras de Oporto. Todavía tengo que ponerme a hacer
un barrido fino. En la pc tengo también algunos archivos obtenidos con este
programa que planeo usar para probar simplemente el armado de los gráficos.
Después tengo que armar los gráficos desde Oporto y traerlos. O traer
los archivos y graficar acá, lo que sea más rápido.

--------------------------------------------------------------------------------------

21/08/2021

En la carpeta Analizando Actividades guardé el código que estaba usando
para armar y simular redes de Actividades. Ese código recibe valores de
N,alfa,Cdelta e iteración y guarda dos archivos, uno de Opiniones donde
registra Opinión inicial del sistema, Variación Promedio, Opinión final,
Semilla y Opiniones de cinco agentes testigos; el segundo archivo
guarda datos sobre actividades como los valores de actividad de todos
los agentes, un registro de cuáles agentes se activan al armar cada red
y el valor del grado medio de cada red armada.
El archivo con datos de Opiniones se llama 
"Datos_Opiniones_alfa=$_Cdelta=$_N=$_Iter=$.png",
mientras que el archivo con datos de Actividades se llama
"Datos_Actividades_alfa=$_Cdelta=$_N=$_Iter=$.png".

Este programa en principio la idea era que me iba a servir para estudiar
las redes de Actividades, pero estas resultaron tener bastantes más complicaciones
de las esperadas, por lo que se transformó en un programa para un análisis profundo
del armado y comportamiento de estas redes. En particular aprovecho
para guardar ahora este código debido a que estuve haciendo unas mediciones
con los datos de Actividades y parecieran dar bien todos, por lo que 
creo que no voy a necesitar seguir armando ese archivo. Eso es importante
porque es un archivo de datos menos, lo cual es menos espacio ocupado
al armar mis datos. Pero por si acaso en el futuro volviera a necesitarlo
es que me guardo el código.

Los tipos de datos armados por esto los podés buscar mejor descriptos
en el archivo de Documentación dentro de la carpeta DilAct, la cual
contiene el bache de datos de Actividades, Reversión Actividades,
Regact, HomofiliaCero, TiempoExtra y en el futuro habrá más seguro.

----------------------------------------------------------------------------------

25/09/2021

En la Carpeta de "Redes Estáticas NCC" lo que voy a hacer es copiar los archivos
de la carpeta de Redes Estáticas y lo que voy a hacer es cambiar el criterio de Corte.
La idea es que por lo que estábamos viendo con Seba, pareciera que en la región de
transición de mis redes estáticas, mis sistemas frenan antes de tiempo, porque
si hubieran seguido corriendo hubieran llegado a resultados diferentes a los
que tenían. Por eso la idea es cambiar el criterio de corte. No cambiando el valor del
criterio de corte, sino que haciendo que el sistema calcule la variación promedio entre
el paso actual y varios pasos anteriores, posiblemente 20 pasos anteriores.
Para eso tengo que agregar un array de punteros que contengan los datos calculados de cada
paso temporal hasta 20 pasos anteriores y así ir calculando. Por eso es que es un cambio
sobre el programa de Redes Estáticas que mejor tenerlo en un código aparte.

-----------------------------------------------------------------------------------

27/09/2021

En la carpeta "Actual" puse el código que tenía actualmente en src. Ese código es 
el que usé para ver cómo funcionaba el sistema de la red de Actividades cuando
variaba constantemente la red en todos los pasos temporales. Por lo que vi no había
guardado estos archivos antes, así que por si acaso los guardo aparte mientras
pongo a prueba el código de redes estáticas con nuevo criterio de Corte.

Entonces para aclarar, este código en vez de rearmar la red de actividad cada un número
discreto de tiempo, rearma la red en cada iteración. Además, para tener una buena
cantidad de iteraciones es que le pido que rearme la red 5000 veces.

-------------------------------------------------------------------------------------

18/10/2021

En la carpeta "Revisión NCC" está el código que se encarga de armar los datos de Redes estáticas
que usé para comprobar que el NCC no estuviera del todo errado. Si no recuerdo mal, la idea 
era mirar un poco por arriba que los datos estuvieran correctamente recorriendo la región 
donde el sistema pasaba por consenso/polarización/ideológico. La triple frontera.

Los parámetros son básicamente los mismos que los usados en Redes Estáticas NCC,
la diferencia es que recorro menos alfas y me muevo en Cosdelta=0. Todo para poder
ver rápido lo que ocurre.

-------------------------------------------------------------------------------------

03/11/2021

La carpeta "Actividad Acumulada" tiene el programa que arma la red de Actividad
varias veces y guarda los datos de la matriz de Adyacencia cosa de poder armar la
red de Actividad Acumulada. Por ahora el archivo arma redes de actividades siguiendo
los parámetros de la red usada en el paper de Actividad, es decir N=5000, m=5,
epsilon=0,001, gamma=2,8 y el eta implícito. (Quizás no es tan fiel al paper
de actividad) La red de Actividad se rearma 500 veces.

--------------------------------------------------------------------------------------

14/11/2021

La carpeta "Red Acumulada" tiene el programa con el cual tenías una red que en cada
tiempo discreto se recalculaba la red acumulándose con la anterior. El objetivo
de esto era combatir la esparsidad de la red de Actividad y ver si con este
cambio al mecanismo de Baumann el sistema lograba converger a algún resultado.
 Lo que se observó es que el sistema en este caso tampoco lograba converger a
un resultado, entendiendo por converger a que cumpliera con el criterio de Corte
planteado. El sistema como siempre tiene N=1000, K=3, 2 tópicos, dt=0.01,
gamma=2.1, beta=3, m=10, epsilon=0.01, criterio de corte=0.0005 e iteraciones
extra = 15.
 Además lo último que probamos con este programa es que la red se recreara cada
5 tiempos discretos en vez de cada uno, pero eso tampoco logró resolver el problema.

------------------------------------------------------------------------------------------

31/12/2021

Voy a empezar organizando las carpetas para poder preparar los archivos
necesarios para las simulaciones de los gráficos finales. Lo primero es cambiarle
el nombre a la carpeta "Actual". El programa de esa carpeta lo que hace
es rearmar la red de Actividad en cada iteración y correr el programa por 5000
iteraciones. Podríamos llamarlo "Rearmado Constante Actividad".

Ahora, lo siguiente es guardar el código que se encuentra en este momento dentro
de src. Este código me arma las redes de Actividades a partir de ir acumulándolas
y cortando el proceso en cuanto se confirma que la red construida es conexa.
Llamémoslo "Actividades Conexas". El código arma dos archivos, uno de Datos_Opiniones
donde guarda el Estado Inicial de la Matriz de Opiniones, La Variación promedio,
el Estado Final de la Matriz de Opiniones, el Grado de los agentes, la Actividad
de los agentes y la semilla de la simulación.
El segundo archivo, Datos_Testigos guarda la Actividad de los agentes (Dos veces porque
me confundí) y las opiniones de los testigos en la evolución del sistema.
Para armar ciertos gráficos me hizo falta el armar unos archivos extra que son
Evolución_Sistema, en los cuales guardo las opiniones de todos los agentes
en la evolución del sistema.
Este código funciona como la mayoría, 1000 agentes, 2 tópicos, variando alfa y cos(delta).
Agrega una nueva capa a la red en cada paso discreto, funciona con homofilia
y creo que nada más especialmente llamativo.

------------------------------------------------------------------------------------------

02/01/2022

Agregué la carpeta "TEFinal", la cual arma los archivos de simulación que usé para las redes
de actividad de Tiempo Extra. Estos datos me sirvieron para la tanda final de gráficos que
quería armar. Me guardo el archivo por si después tengo que corregir algo de esos gráficos
y la verdad no tengo ganas de rearmar esto una segunda vez. Para qué hacer trabajo innecesario,
¿verdad?. Bueno, cuestión que con esto me hice dos tandas de datos, una con alfa=0 y otra
con alfa=0,5. Lo hice para cos(delta) = 0, rearmando las redes 30 veces. Me guardé la evolución
de las opiniones a lo largo del tiempo, todas las reconstrucciones de la red de Adyacencia
y la Variación Promedio del sistema. Como estas tres son cosas que van evolucionando en el
tiempo es que tuve que armarme tres archivos diferentes en los cuales guardar cada uno de
los datos.
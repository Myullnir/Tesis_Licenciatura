En este archivo voy a ir anotando qué hacen las distintas versiones del
programa que vaya guardando. De esta manera tendré registros de las versiones
de los programas en la medida en que los voy modificando.
----------------------------------------------------------------------------------

30/12/2020

Armé la carpeta "Iteración ordenada". Esta versión contiene 2 structs, uno de 
Parámetros y uno de la Red. El programa puede armar las redes, inicializarlas,
aplicar el método RK4 y evolucionar el sistema. Luego guarda los datos de la
matriz de Adyacencia, la de Superposición y los valores de Opiniones a medida
que evoluciona. Me crea a la salida un archivo con el nombre
"Datos_Evolucion_Opinion_N=$_T=$_K=$".

Lo que tiene este programa y el motivo por el cuál lo voy a archivar es que
la iteración se realiza de manera ordenada, evolucionando a TODOS los agentes
al mismo tiempo. De alguna manera es como si tomara una fotografía del sistema,
se fijara cómo deben evolucionar todos los agentes dada esta foto y luego de
calcular cuál sería el avance para todos, recién ahí hiciera la evolución.

Pablo me propuso que este avance tan ordenado podría estar afectando a la forma
de evolucionar del sistema y que por tanto debería probar primero con realizar
una recorrida ordenada de los agentes, pero permitiendo que estos se conecten con
1 agente de manera aleatoria. Después en el futuro quizás le permita además que
la selección de quién va a evolucionar sea también aleatoria.

Dado esto, se me presenta la oportunidad de modificar el RK4 usado, de manera
de que el RK4 sea mucho más general en su forma de iterar. Estoy pensando en
que quizás eso me lleve a construir nuevas funciones que encierren al RK4 mientras
hago iterar al sistema. Habrá que ver eso. Pero lo importante es que entonces el
motivo de no guardar un sólo archivo sino toda la carpeta en "Iteración Ordenada"
es que las funciones guardadas en sus archivos general, inicializar y avanzar
no van a ser las mismas que las que voy a armar ahora.

---------------------------------------------------------------------------------

07/01/2021

Armé la carpeta "Interacción de a pares". Esta carpeta lo que contiene es el programa
modificado de manera de que cada iteración recorra a todos los agentes y realice las
interacciones con un segundo agente seleccionado de manera aleatoria. En esta
versión el sistema evoluciona de a una sóla variable a la vez. Ahora el RK4 toma
una sola variable y esa la evoluciona, y la variable se define por fuera del RK4.

Estoy guardando ahora el archivo porque el otro día intenté agregar elementos al
Struct de la Red y eso me descuajeringó todo. Ahora mismo logré hacer que el
programa vuelva a funcionar, por lo que por lo menos de movida, ahora
todo vuelve a estar en su lugar. Lo que voy a hacer ahroa es volver a intentar
agregar los elementos necesarios a los structs e intentar hacer funcionar el
programa de nuevo. Si todo funca, genial. Sino, habrá que ir revisando de nuevo
cómo hacerlo funcionar. Igual, pareciera que el problema giraba en torno a los
PRE incrementos colocados en los for. Al cambiar eso, pareciera que se ordenó todo.
También puede ser que hubiera problemas que están guardados en los archivos.o
que yo desconozco y si hubiera borrado y re armado esos archivos estos problemas
se hubieran solucionado antes, quién sabe.

Lo actualicé a la versión del 17/01/2021. Es decir, crea dos archivos de texto
simultáneos, toma valores de input, calcula la variación del sistema, tiene
dos matrices más que antes.

---------------------------------------------------------------------------------

21/01/2021

Hice la que creo es la última actualización a Interacción de a Pares. Ahora
voy a cambiar los archivos para que me creen los datos necesarios para armar
los gráficos de Baumann. Es por esto que voy a hacer que me guarde un archivo
de menos, le voy a cambiar los nombres, le voy a cambiar las variables y más.

Guardo un sólo archivo porque para los gráficos de Baumann no necesito
guardar los datos de la variación promedio del sistema.

Los nombres los voy a cambiar para que reflejen la variación en Delta y
Alfa correspondiente. Por ahora no le voy a poner el valor de N.
Es cierto que por ahora voy a empezar computando para 100 agentes, porque
creo que 100 va a ser mucho tiempo de cómputo. Pero considero
que esa info la puedo deducir sabiendo que la cantidad de tópicos es 2.

Con cambiar variables me refiero a que ahora los valores que se van a
definir por input de línea de comando son alfa y Delta, que además son
los dos floats.

---------------------------------------------------------------------------------

08/02/2021

Agregué la carpeta de Gráfico baumann. Lo que tengo ahí es un programa
que recibe dos inputs que son el valor de Alfa y el ángulo en grados
de Delta. La idea de este programa es que tenga los mismos parámetros
que el modelo que usa Baumann para así poder replicar los mismos gráficos
que Baumann realiza. Este programa lo que hace es correr el modelo hasta
que la Variación promedio sea menor a 10^(-6) y en un archivo registra
la matriz de Adyacencia, la de Superposición y las opiniones de todos los
agentes en cada paso temporal. Los archivos reciben de nombre:
"Datos_Opiniones_alfa=$_Cdelta=$".
Los parámetros de esta red actualmente son N=500, K= 3, T=2, Criterio
de corte= 10^(-6), Iteraciones Extra = 1000, Máximo de Opiniones
iniciales = 3, dt = 0.001.

---------------------------------------------------------------------------------

16/02/2021

Guardé en la carpeta de Gráfico Baumann la última versión que armé de
este programa. A partir de ahora voy a empezar a trabajar en armar un
código que implemente el uso de una red impulsada por actividad,
selección de vecinos por homofilia e interacción de grupos.
Por eso es que este código lo dejo acá separado para volver
en un futuro, y mientras voy a ir armando un nuevo código que en el
futuro voy a guardar en la carpeta Modelo Impulsado por Actividades.
Suponiendo que logre entender qué hace que los struct me funcionen
tan mal.

-------------------------------------------------------------------------------

28/02/2021

El código de la carpeta "Modelo Erdós-Renyi" arma redes estáticas
con grado medio 8, para distintos valores de agentes: N=10,100,1000.
Además los otros parámetros del sistema son: K=1, T=2, Crit Corte = 10^(-6)
Máxima opinión inicial = 3. El dt es 0.001 actualmente, pero estamos
pensando en cambiarlo. Además el código ahora sólo corre sobre redes
conexas a partir del uso de la función Tamaño_Comunidad.

Además el sistema ahora evoluciona la opinión de la red de manera
sincrónica, no como antes que los iba evolucionando a cada uno
a la vez. Para esto justamente modifiquñe la fuinción de RK4
para que devuelva a la salida el valor evolucionado del vector
y que el vector que le pasás no se modifique.

-------------------------------------------------------------------------------

07/03/2021

El código de la carpeta "Cambios dt" trabaja también con redes armadas
con el modelo de Erdós-Renyi con un grado medio de 8. El resto de los
parámetros también son iguales. El tema es que este código lo que hace
es recibir valores de N y Alfa, y en el interior del código tiene
agendado varios valores de dt. La idea es que crea inicialmente una
red y un set de valores de opiniones iniciales. A ese sistema inicial
lo evoluciona varias veces cambiando únicamente el valor de dt, de
manera de ver cómo cambia la evolución del sistema al cambiar ese 
parámetro.

Por tanto, el código funciona de manera de que guarda los valores
iniciales de Opinión y que luego a partir de estos vuelve a reiterar
el sistema. La red está guardada en la matriz de Adyacencia, y como
la red es estática, una vez creada no hay que hacerle nada.

------------------------------------------------------------------------------

07/05/2021

El código en la carpeta "ER2" es la versión oficial de Erdós-Renyi.
Fue usado para trabajar con redes de 100 y 1000 agentes, 2 tópicos,
Influencia social igual a 1, dt de 0,1, Grado medio de la red 8,
Criterio de Corte en la mayoría de los casos igual a 10^(-6) y
Máximo de opiniones iniciales igual a 3. Este código se encargó
de armar los datos para redes variando los valores de Alfa entre
0 y 1 y cos(delta) también entre 0 y 1. El cos(delta) varió
de a 0,1, mientras que el alfa entre 0,2 y 1 varió de a 0,1
y entre 0 y 0,2 varió de a 0,01. Eso es porque en esa región
se encontraba la región de transición del sistema que hacía
que el sistema pase del consenso a la polarización.

Para resumir lo que hacía el código, recibía como Input el número
de agentes N, el valor de Alfa y cos(delta), aunque no recibía los
valores exactos sino que recibía números grandes que después en el
archivo C corregía. También recibía el número de iteración, que indicaba
el número de elemento del ensamble que correspondía a esa simulación.
Luego con todos los datos recibidos, armaba aleatoriamente las matrices
de Adyacencia y de Opiniones, definía la de Superposición usando el valor
de cos(delta) correspondiente. También armaba dos vectores para utilizar más
tarde, que eran el de opiniones previas y el de Diferencia de opiniones.
Definía un puntero a la función que me aplicaba la ecuación diferencial,
comprobaba que la matriz de Adyacencia fuera conexa, luego abría mi archivo,
escribía los datos iniciales importantes y desde ahí empezaba a evolucionar
el sistema usando un correspondiente método de RK4. Cuando veía que el sistema
variaba las opiniones de los sujetos en promedio una cantidad menor a 
10^(-6), entonces cortaba, cerraba todo y listo.
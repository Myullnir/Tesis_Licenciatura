Acá voy a ir anotando las ideas que tenga para optimizar el código de manera de que
corra mejor, ahorrando tiempo y problemas. Además de esto pueden salir algunas funciones
interesantes para poner en el código general.
-----------------------------------------------------------------------------------------------

.) Armar una tabla que tenga calculados previamente los valores de las tanh.
Esto va a requerir también tener armada una función que interpole los datos
de la tabla de manera que todo dato que caiga en un valor intermedio también
se pueda calcular correctamente.

.) Revisar la forma en que el programa pueda levantar datos de un archivo
ya armado previamente. Esto va a servir para que un día calcule simplemente
una tabla bien grande y desde entonces simplemente la levante.

Estas dos ideas sirven para reemplazar en la función Din1 el cálculo de la 
tanh.

.) En la función Din1 voy a poner un if para poder elegir el segundo agente
de manera aleatoria, pero para que ese agente no sea el mismo que estoy
iterando. Se me ocurrió armar una función que tome como input el número
principal y el rango de valores en el cual se tiene que mover el número
aleatorio. La idea es que la función arma una tira de números, que son
todos los números en el rango menos el número principal, luego genera un
número al azar que está dentro del rango menos uno, y lo que hace es ir a
buscar al número que se encuentra en esa casilla aleatoria de la tira de
números. De esta manera, sin usar un if, me aseguro que en una sola tirada
aleatoria estoy eligiendo un número que es distinto al número principal.
Implementando esto en la función Din1, lo que lograría es que el sistema
no tenga que usar el if y que en un sólo intento genere el número que
quiero, de manera que el agente principal interactúe con alguien que
no es él mismo.

.) En el archivo de Análisis Datos.ipynb fijate que en el módulo que
usé para calcular Kmin y Kmax, estoy considerando a K entero. K por
definición en mis funciones es un float. Eso podría ser un problema
al intentar armar un for entre esos valores de K. La función que detecta
mínimos y máximos puede seguir funcionando bárbaro si cambio las
transformaciones de int a float, pero habría que revisar algo sobre
el paso que existe entre valores para hacer que el código no se
trabe si hubiera valores de K que fueran floats.
Se me ocurre que no sólo mida el Kmin y el Kmax, que mida un deltaK.
Luego podría tomar la diferencia de Kmax-Kmin, dividirla por el
deltaK y eso me daría la cantidad de valores de K que hay en
ese intervalo. Luego armaría alguna ecuación que moviendo algún
entero en ese intervalo me reproduzca los valores de K y listo.
Creo que ya sé cómo hacerlo. Simplemente me anoto TODOS los valores
de K que me encuentre en una lista. Convierto la lista a Set para
eliminar las repeticiones. Después la vuelvo lista de nuevo.
La ordeno. El primer elemento es el Kmin. El último elemento
es el Kmax. La diferencia del primero con el segundo es el deltaK.